pcl api 与 tik的对比
1.pcl实现的层次比tik高
	虽然pcl与tik都是使用高级语言编写程序，但是tik的代码是对ai_core中的主存、缓存以及各种类型的计算单元进行直接操作
	
	这就导致一个问题：
		高级语言中实现的类、在tik中没有与之对应的东西。
		具体的来说，tik中有3种数据结构，分别是Scalar、Tensor以及InputScalar
			Scalar表示标量
			Tensor表示张量，tik中大部分接口都是针对Tensor设计的。
			若想要用tik实现pcl的接口
				首先，需要做类(对象)对Tensor的映射，这个映射的规则如何设计？
				其次，tik要对pcl中的可复用的接口进行实现与封装，这项工作优先于pcl类的分析与实现
				

2.对于如何用tik实现pcl这一问题，需要对该问题分析到哪一个粒度？
	粗粒度：仅仅给出实现pcl接口可能使用到的tik接口，但不涉及调用接口逻辑。
	细粒度：在定位tik接口的基础上，给出可能的调用接口的逻辑（伪代码），但不能给出具体的代码。努力一下可以达到。
	再细粒度：给出具体代码，包括变量定义、数据搬运、接口调用，同时涉及性能调优（tik的高性能实现方案中涉及计算分片、算子泛化、双缓存、多核等）。非常困难，以我目前的技术水平达不到。
